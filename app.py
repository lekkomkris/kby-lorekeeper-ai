import streamlit as st
from lorekeeper import load_and_process_lore, find_answer_in_lore

# Set page title and icon
st.set_page_config(page_title="‡∏ò‡∏≤‡∏£‡∏õ‡∏±‡∏ç‡∏ç‡∏≤ AI", page_icon="üß†")

st.title("üß† ‡∏ò‡∏≤‡∏£‡∏õ‡∏±‡∏ç‡∏ç‡∏≤ AI - KBY Lorekeeper")
st.caption("‡∏ï‡πâ‡∏ô‡πÅ‡∏ö‡∏ö Agent ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏Ñ‡∏•‡∏±‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ")

# Use a cache decorator to load data only once
@st.cache_data
def load_data():
    """Loads the lore data from the text file."""
    lore_data = load_and_process_lore("kby_lore.txt")
    return lore_data

# Load the knowledge base
lore = load_data()

if lore:
    # Create a text input box for the user
    user_question = st.text_input("‡∏õ‡πâ‡∏≠‡∏ô‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà:", placeholder="AlphaEvolve Development Cycle ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?")

    # If the user has entered a question
    if user_question:
        # Add a spinner while processing
        with st.spinner("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö..."):
            # Find the answer using our existing logic
            answer = find_answer_in_lore(user_question, lore)
            
            # Display the answer in a blue box
            st.info(answer)
else:
    st.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏•‡∏±‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ `kby_lore.txt` ‡πÑ‡∏î‡πâ")